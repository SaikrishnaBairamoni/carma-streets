name: Doxygen

on:
  repository_dispatch:
  push:
    branches:
      - develop
      - gh-pages

# In that case do the job 'make_and_deploy_doxygen'
jobs:
  make_and_deploy_doxygen:
    runs-on: ubuntu-18.04
    # which needs the following steps to be executed:
    steps:
      # 1. Checkout current branch of GitHub repository.
      - name: Checkout current branch
        uses: actions/checkout@v2
      # 2. Install doxygen and its auxiliary components.
      - name: Install doxygen and latex components
        run: sudo apt-get update; sudo apt-get install -y doxygen graphviz texlive-full cmake git build-essential libboost1.65-all-dev curl unzip gcc-7 g++-7 autotools-dev automake qtbase5-dev qtbase5-dev-tools libqhttpengine-dev libssl-dev libpugixml-dev libgeographic-dev sqlite3 libsqlite3-dev python3-pip && \
            git clone https://github.com/google/googletest/
            cd googletest/
            cmake .
            make
            make install && \
            git clone https://github.com/edenhill/librdkafka
            cd librdkafka/
            ./configure --prefix=/usr
            make
            make install && \
            git clone https://github.com/gabime/spdlog.git
            cd spdlog/
            mkdir build && cd build
            cmake .. && make -j
            make install && \
            git clone  https://github.com/Tencent/rapidjson
            cd rapidjson/
            mkdir build && cd build
            cmake .. && make -j
            make install && \
            #Install net-snmp
            apt-get update  && apt-get install -y wget libperl-dev
            wget http://sourceforge.net/projects/net-snmp/files/net-snmp/5.9.1/net-snmp-5.9.1.tar.gz 
            tar -xvzf net-snmp-5.9.1.tar.gz
            cd net-snmp-5.9.1/
            ./configure --with-default-snmp-version="1" --with-sys-contact="@@no.where" --with-sys-location="Unknown" --with-logfile="/var/log/snmpd.log" --with-persistent-directory="/var/net-snmp"
            make
            make install && \
            # Install qhttpengine
            git clone https://github.com/etherealjoy/qhttpengine.git
            cd qhttpengine/
            mkdir build && cd build 
            cmake .. && make -j
            make install && \
            # Install PROJ, a package for coordinate transformations
            git clone https://github.com/OSGeo/PROJ.git PROJ --branch 6.2.1 && \
            cd PROJ && \
            ./autogen.sh && \
            ./configure  && \
            make && \
            make install
            
            export DEBIAN_FRONTEND=noninteractive
            # Download a cmake module for PROJ
            cd /usr/share/cmake-3.10/Modules && curl -O https://raw.githubusercontent.com/mloskot/cmake-modules/master/modules/FindPROJ4.cmake
            apt update 
            apt install -y lsb-release
            sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
            curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -
            apt-get update && \
            apt-get install -y ros-melodic-catkin
            cd /opt/ros/melodic/
            ls -a
      # 3. Create the doxygen pages.
      - name: Create the doxygen
        run: | 
          bash build.sh 
          ls -la
          pwd
      - name: Moving Files
        run: |
          mv ./kafka_client/build/docs/api-docs ./api

      # Deploy to GitHub Pages
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
