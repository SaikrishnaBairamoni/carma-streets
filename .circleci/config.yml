version: 2

#  Copyright (C) 2019-2020 LEIDOS.
# 
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not
#  use this file except in compliance with the License. You may obtain a copy of
#  the License at
# 
#  http://www.apache.org/licenses/LICENSE-2.0
# 
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations under
#  the License.
# 

# Configuration file for Circle CI 
# CI will report failure if any executed command returns and error status
# Operations performed are as follows
# Build source code
# Run unit tests for C++ 
# Run static code analyzer for SourceCloud
# Upload test results
# Every run command should start with source ${INIT_ENV} to ensure all default dependencies are available
jobs:
  build:
    # Pull docker image 
    # XTERM used for better make output
    docker:
      - image: ubuntu:bionic-20190807
        environment:
          TERM: xterm
          
    # Set working directory
    working_directory: "/home/Carma-streets-build"
    # Pull code and execute tests |
    # Name of each run command defines purpose use
    steps:
      #setup remote docker
      - setup_remote_docker :
          docker_layer_caching: false
      # Checkout PR branch
      - checkout:
      - run: 
          name: Install Sonar & Dependencies
          command: |
            set -x
            apt-get update
            apt-get -y install curl unzip sudo cmake gcovr gcc-7 g++-7 libboost1.65-dev libboost-thread1.65-dev libboost-regex1.65-dev libboost-log1.65-dev libboost-program-options1.65-dev libboost1.65-all-dev libxerces-c-dev libcurl4-openssl-dev libsnmp-dev libmysqlclient-dev libjsoncpp-dev uuid-dev libusb-dev libusb-1.0-0-dev libftdi-dev swig liboctave-dev gpsd libgps-dev portaudio19-dev libsndfile1-dev libglib2.0-dev libglibmm-2.4-dev libpcre3-dev libsigc++-2.0-dev libxml++2.6-dev libxml2-dev liblzma-dev dpkg-dev libmysqlcppconn-dev libev-dev libuv-dev git vim zip build-essential libssl-dev qtbase5-dev qtbase5-dev-tools curl libqhttpengine-dev libgtest-dev  libcpprest-dev librdkafka-dev
            
            cd /home/Carma-streets-build/
            mkdir -p ext
            cd /home/Carma-streets-build/ext/
            git clone https://github.com/usdot-fhwa-OPS/libwebsockets.git
            cd /home/Carma-streets-build/ext/libwebsockets/
            cmake -DLWS_WITH_SHARED=OFF .
            make
            make install
            cd ../../../..
            cd /home/Carma-streets-build/ext
            git clone https://github.com/usdot-fhwa-OPS/qhttpengine.git
            cd /home/Carma-streets-build/ext/qhttpengine
            cmake .
            make 
            make install
            
            cd /home/Carma-streets-build/ext/server
            cmake .
            make
            make install

            cd /home/Carma-streets-build/ext/ccserver
            cmake .
            make
            make install
            
            cd /usr/src/googletest
            mkdir build
            cd /usr/src/googletest/build
            cmake ..
            make
            make install
            cd /usr/src/googletest
            rm -rf build
            ln -s  /usr/local/lib/libgtest.a /usr/lib/libgtest.a 
            ln -s  /usr/local/lib/libgtest_main.a /usr/lib/libgtest_main.a
            cd /usr/local/lib/
            ldconfig

            cd /home/Carma-streets-build/ext/
            git clone https://github.com/HowardHinnant/date.git
            cd /home/Carma-streets-build/ext/date
            cmake .
            make
            make install
            ldconfig


            cd ../../../../..
            cd /home/Carma-streets-build
            mkdir .base-image
            SONAR_DIR=/opt/sonarqube
            mkdir $SONAR_DIR
            curl -o $SONAR_DIR/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.2.0.1873-linux.zip
            curl -o $SONAR_DIR/build-wrapper.zip https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
            curl -sL https://deb.nodesource.com/setup_10.x | bash -
            sudo apt-get install -y nodejs
            mkdir /opt/jq
            curl -L "https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64" -o /opt/jq/jq
            chmod +x /opt/jq/jq
            cd $SONAR_DIR
            unzip $SONAR_DIR/sonar-scanner.zip -d .
            unzip $SONAR_DIR/build-wrapper.zip -d .
            rm $SONAR_DIR/sonar-scanner.zip
            rm $SONAR_DIR/build-wrapper.zip
            mv $(ls $SONAR_DIR | grep "sonar-scanner-") $SONAR_DIR/sonar-scanner/
            mv $(ls $SONAR_DIR | grep "build-wrapper-") $SONAR_DIR/build-wrapper/
            echo "export PATH=$PATH:/opt/jq/:$SONAR_DIR/sonar-scanner/bin/:$SONAR_DIR/build-wrapper/" > /home/Carma-streets-build/.base-image/init-env.sh
  docker_build&push :
   machine:
    image: ubuntu-1604:202004-01
   steps:
     - checkout
     - run: 
        name: Docker Build
        # Run MYSQL image and build Carma-streets docker image
        command: |
          docker-compose up -d db
          docker build --network=host -t usdotfhwastoldev/carma-streets:carma-streets-${CIRCLE_BRANCH,,} -f examples/Dockerfile .
    
     - run: 
        name: Docker Push
        # Push Carma-streets docker image to usdotfhwastoldev dockerhub
        command: | 
          echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
          docker push usdotfhwastoldev/carma-streets:carma-streets-${CIRCLE_BRANCH,,}

    
   
  docker_build&push_develop :
   machine:
    image: ubuntu-1604:202004-01
   steps:
     - checkout
     - run: 
        name: Docker Build
        # Run MYSQL image and build carma-streets docker image develop image
        command: |
          docker-compose up -d db
          docker build --network=host -t usdotfhwastoldev/carma-streets:carma-streets -f examples/Dockerfile .
    
     - run: 
        name: Docker Push
        # Push Carma-streets docker image to usdotfhwastoldev dockerhub
        command: | 
          echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
          docker push usdotfhwaops/v2xhubamd:carma-streets
workflows:
  version: 2
  build:
    jobs:
      - docker_build&push_develop:
          filters:
            branches:
              only: develop
      - docker_build&push:
          filters:
           branches:
              ignore: develop
      - build
 
